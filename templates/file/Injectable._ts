import { DomainStoreTypes, ScreenStoreTypes, ServiceTypes } from 'app/Types';
import { InjectableBase } from 'common/InjectableBase';
__DEPENDENCY_IMPORTS__
import { inject, injectable } from 'inversify';
import { action } from 'mobx';

export interface __INTERFACE_NAME__ {
  readonly initialized: boolean;
}

@injectable()
export class __NAME__ extends InjectableBase implements __INTERFACE_NAME__ {
  constructor(__CONSTRUCTOR_INJECTION__) {
    super(__SERVICE_IDENTIFIER__);
    this.awaitDependenciesAndInit(arguments);
  }

  @action
  protected initDefaultValues(): void {
    // TODO: Sync initialization goes here.
    // Setup default values, event listeners, etc.
  }

  @action
  protected async init(): Promise<void> {
    // TODO: Async initialization goes here.
    // When this is called, all of the injected dependencies will have been initialized
  }
}
